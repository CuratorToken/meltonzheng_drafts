{
    "contractName": "CuratorToken",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "Paused",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "id",
                    "type": "uint256"
                }
            ],
            "name": "Snapshot",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "Unpaused",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "DOMAIN_SEPARATOR",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "snapshotId",
                    "type": "uint256"
                }
            ],
            "name": "balanceOfAt",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burnFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "earned",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getRewardForDuration",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "lastTimeRewardApplicable",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "lastUpdateTime",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "nonces",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "paused",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "periodFinish",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "deadline",
                    "type": "uint256"
                },
                {
                    "internalType": "uint8",
                    "name": "v",
                    "type": "uint8"
                },
                {
                    "internalType": "bytes32",
                    "name": "r",
                    "type": "bytes32"
                },
                {
                    "internalType": "bytes32",
                    "name": "s",
                    "type": "bytes32"
                }
            ],
            "name": "permit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "rewardPerToken",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "rewardPerTokenStored",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "rewardRate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "rewards",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "rewardsDuration",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "snapshot",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "snapshotId",
                    "type": "uint256"
                }
            ],
            "name": "totalSupplyAt",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "userRewardPerTokenPaid",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Snapshot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardForDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Retrieves the balance of `account` at the time `snapshotId` was created.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"totalSupplyAt(uint256)\":{\"details\":\"Retrieves the total supply at the time `snapshotId` was created.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/contracts/CuratorToken.sol\":\"CuratorToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/contracts/CuratorToken.sol\":{\"keccak256\":\"0x18ccbd4f215287efe63ff8338bd39741f8647cfaa9170af7ebe33b3f671a66c1\",\"urls\":[\"bzz-raw://26cc3f899f6c69b5f25c87ce4aed10bbf273343d2f626660a5db5d2ced4f0a3f\",\"dweb:/ipfs/QmVVBmHCVZGtDmvNPU2AMwUytSJReBRkhamQLuaR96q9NF\"]},\"c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0x94c4719c16ffb96dd3cdc68f6fbf78105153018adbf382241821e8188e6a4bd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33390c907a31dd8961949b0fa1b9557781c81024231f607f6f97b203746ebf60\",\"dweb:/ipfs/QmSdRfWx8tsa2Phm23qtNGTDUek2BphzwyxuqKf3AEszL9\"]},\"c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/drafts/EIP712.sol\":{\"keccak256\":\"0x1dd6456f505926d94adcb04fb920c3e20c469ad1c0c0f7d582f70f773f99ad39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://692fc82830398872bc5a5a3156c628d9c34cc12aec70fb49054d78fc47c91c87\",\"dweb:/ipfs/Qmb6rPFPGx7fACUf6CmC1xiWnCQRGaYZUw39czGghgZQ6W\"]},\"c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/drafts/ERC20Permit.sol\":{\"keccak256\":\"0xaa17940e5c3654c6eb39b11f6667af8ad94594e9c3424a0c8bf4bb2ae452a36c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edd9ebc21702f404a149df3a33dbded0fb931384d7fe752e56d25ef8766c89dc\",\"dweb:/ipfs/QmYDoWb3VCKAdu4MQ7srNFrBnBp2xvL1Vxget2p3VToNZ8\"]},\"c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/drafts/IERC20Permit.sol\":{\"keccak256\":\"0x1aab7754719ba764a8a05bec47e975001400f62986474945eb3dbee6d871259f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c14e8ff1b384bdb68f262669364b1e79fbbd82b85938b7ce788a1395c40c6a2\",\"dweb:/ipfs/QmUKLXfSeEuRUXkeWLBhjHTKeSFoNBCS1RaMXv1AmHXYzn\"]},\"c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/math/Math.sol\":{\"keccak256\":\"0x363bd3b45201f07c9b71c2edc96533468cf14a3d029fabd82fddceb1eb3ebd9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d676d5c3a72e5fea8364a1e3e5b488a959aae08d069995b1274027f3845e6521\",\"dweb:/ipfs/Qma7DL738Wje4G9kcwW9bXwTGY4ePR7SMmsMhbULWqmixE\"]},\"c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x9c0eb3b0e11d2480d49991dc384f1e5f9c9b9967cc81944d50916a9b9c6c4984\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99e4033d778624992e86f0b6d801a4f6d7b5c0cd5c79c1296be90a051ad5f5af\",\"dweb:/ipfs/QmShYmkUqh6pDEeoWadZ24icmCr4C2Xys1uE5boivPmbwf\"]},\"c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/token/ERC20/ERC20Snapshot.sol\":{\"keccak256\":\"0x28a7f29f67c466fc6fe2e47ed27029f45e5161dc2dfe153afdcc7e3962d1d6a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6139aab3dd3258d4ca1cd19d05128c34607b4eeb1240252744b92683efc7a37\",\"dweb:/ipfs/QmNT6C5FcPJVAUYkKfqBALuGgXGvdSnxJx4CQQvaYcWoZX\"]},\"c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x04cf924bfffd3331758fe93625fa90ea307f09d3ea57aa1c6a070cfcfe562674\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16f415f3dd1fbf08a7b975bb055bf5da47e770ed4be927aecb3a60938d24fd54\",\"dweb:/ipfs/QmbpU3mL5SetKVqHHhozsFgntVCFTmFmN2xZXLe3iktCAX\"]},\"c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/utils/Counters.sol\":{\"keccak256\":\"0x21662e4254ce4ac8570b30cc7ab31435966b3cb778a56ba4d09276881cfb2437\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acce8fe6adc670f9987a8b6aedc4cc0abcd0dcd2e152d649a12099d735bd7bad\",\"dweb:/ipfs/QmXAk17oK3daBmA8CGyVcU56L496jW3U6Ef1WkfHyB1JAV\"]},\"c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x212fb1b1d4beaf74354dad9bc329f44ee3c5375ef1c32acff76b4ecefc10f1d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d21c68cb321d1c8d0fa39fd9ecb6bbe3b2f26623b0f38af280a010c916c85f23\",\"dweb:/ipfs/Qmf2P51HRC4ekDHLYfbXu5SXR33gXrWtq6oKSmfyWqVRuC\"]}},\"version\":1}",
    "bytecode": "",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106102265760003560e01c806379cc679011610130578063981b24d0116100b8578063d505accf1161007c578063d505accf146105e4578063dd62ed3e14610635578063df136d6514610663578063ebe2b12b1461066b578063f2fde38b1461067357610226565b8063981b24d01461055f578063a457c2d71461057c578063a9059cbb146105a8578063c8f33c91146105d4578063cd3daf9d146105dc57610226565b80638456cb59116100ff5780638456cb59146104fd5780638b876347146105055780638da5cb5b1461052b57806395d89b411461054f5780639711715a1461055757610226565b806379cc67901461049b5780637b0a47ee146104c75780637ecebe00146104cf57806380faa57d146104f557610226565b8063386a9525116101b357806342966c681161018257806342966c681461041c5780634ee2cd7e146104395780635c975abb1461046557806370a082311461046d578063715018a61461049357610226565b8063386a9525146103b257806339509351146103ba5780633f4ba83a146103e657806340c10f19146103f057610226565b806318160ddd116101fa57806318160ddd146103465780631c1f78eb1461034e57806323b872dd14610356578063313ce5671461038c5780633644e515146103aa57610226565b80628cc2621461022b57806306fdde03146102635780630700037d146102e0578063095ea7b314610306575b600080fd5b6102516004803603602081101561024157600080fd5b50356001600160a01b0316610699565b60408051918252519081900360200190f35b61026b610709565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102a557818101518382015260200161028d565b50505050905090810190601f1680156102d25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610251600480360360208110156102f657600080fd5b50356001600160a01b03166107a0565b6103326004803603604081101561031c57600080fd5b506001600160a01b0381351690602001356107b2565b604080519115158252519081900360200190f35b6102516107d0565b6102516107d6565b6103326004803603606081101561036c57600080fd5b506001600160a01b038135811691602081013590911690604001356107f4565b61039461087b565b6040805160ff9092168252519081900360200190f35b610251610884565b61025161088e565b610332600480360360408110156103d057600080fd5b506001600160a01b038135169060200135610894565b6103ee6108e2565b005b6103ee6004803603604081101561040657600080fd5b506001600160a01b03813516906020013561094e565b6103ee6004803603602081101561043257600080fd5b50356109be565b6102516004803603604081101561044f57600080fd5b506001600160a01b0381351690602001356109d2565b610332610a1b565b6102516004803603602081101561048357600080fd5b50356001600160a01b0316610a2b565b6103ee610a46565b6103ee600480360360408110156104b157600080fd5b506001600160a01b038135169060200135610af2565b610251610b4c565b610251600480360360208110156104e557600080fd5b50356001600160a01b0316610b52565b610251610b73565b6103ee610b81565b6102516004803603602081101561051b57600080fd5b50356001600160a01b0316610beb565b610533610bfd565b604080516001600160a01b039092168252519081900360200190f35b61026b610c0c565b6103ee610c6d565b6102516004803603602081101561057557600080fd5b5035610cd7565b6103326004803603604081101561059257600080fd5b506001600160a01b038135169060200135610d07565b610332600480360360408110156105be57600080fd5b506001600160a01b038135169060200135610d6f565b610251610d83565b610251610d89565b6103ee600480360360e08110156105fa57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610dd7565b6102516004803603604081101561064b57600080fd5b506001600160a01b0381358116916020013516610f8e565b610251610fb9565b610251610fbf565b6103ee6004803603602081101561068957600080fd5b50356001600160a01b0316610fc5565b6001600160a01b038116600090815260126020908152604080832054601190925282205461070191906106fb90670de0b6b3a7640000906106f5906106e6906106e0610d89565b90611185565b6106ef88610a2b565b906111e2565b9061123b565b906110c8565b90505b919050565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107955780601f1061076a57610100808354040283529160200191610795565b820191906000526020600020905b81548152906001019060200180831161077857829003601f168201915b505050505090505b90565b60126020526000908152604090205481565b60006107c66107bf6112a2565b84846112a6565b5060015b92915050565b60025490565b60006107ef600e54600d546111e290919063ffffffff16565b905090565b6000610801848484611392565b6108718461080d6112a2565b61086c85604051806060016040528060288152602001611fec602891396001600160a01b038a1660009081526001602052604081209061084b6112a2565b6001600160a01b0316815260208101919091526040016000205491906114ed565b6112a6565b5060019392505050565b60055460ff1690565b60006107ef611584565b600e5481565b60006107c66108a16112a2565b8461086c85600160006108b26112a2565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906110c8565b6108ea6112a2565b6001600160a01b03166108fb610bfd565b6001600160a01b031614610944576040805162461bcd60e51b81526020600482018190526024820152600080516020612014833981519152604482015290519081900360640190fd5b61094c61164e565b565b6109566112a2565b6001600160a01b0316610967610bfd565b6001600160a01b0316146109b0576040805162461bcd60e51b81526020600482018190526024820152600080516020612014833981519152604482015290519081900360640190fd5b6109ba82826116f1565b5050565b6109cf6109c96112a2565b826117e1565b50565b6001600160a01b0382166000908152600660205260408120819081906109f99085906118dd565b9150915081610a1057610a0b85610a2b565b610a12565b805b95945050505050565b600a54600160a01b900460ff1690565b6001600160a01b031660009081526020819052604090205490565b610a4e6112a2565b6001600160a01b0316610a5f610bfd565b6001600160a01b031614610aa8576040805162461bcd60e51b81526020600482018190526024820152600080516020612014833981519152604482015290519081900360640190fd5b600a546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a80546001600160a01b0319169055565b6000610b298260405180606001604052806024815260200161203460249139610b2286610b1d6112a2565b610f8e565b91906114ed565b9050610b3d83610b376112a2565b836112a6565b610b4783836117e1565b505050565b600d5481565b6001600160a01b0381166000908152600b6020526040812061070190611181565b60006107ef42600c546119da565b610b896112a2565b6001600160a01b0316610b9a610bfd565b6001600160a01b031614610be3576040805162461bcd60e51b81526020600482018190526024820152600080516020612014833981519152604482015290519081900360640190fd5b61094c6119f0565b60116020526000908152604090205481565b600a546001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107955780601f1061076a57610100808354040283529160200191610795565b610c756112a2565b6001600160a01b0316610c86610bfd565b6001600160a01b031614610ccf576040805162461bcd60e51b81526020600482018190526024820152600080516020612014833981519152604482015290519081900360640190fd5b6109cf611a79565b6000806000610ce78460076118dd565b9150915081610cfd57610cf86107d0565b610cff565b805b949350505050565b60006107c6610d146112a2565b8461086c856040518060600160405280602581526020016120c26025913960016000610d3e6112a2565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906114ed565b60006107c6610d7c6112a2565b8484611392565b600f5481565b6000610d936107d0565b610da0575060105461079d565b6107ef610dce610dae6107d0565b6106f5670de0b6b3a76400006106ef600d546106ef600f546106e0610b73565b601054906110c8565b83421115610e2c576040805162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015290519081900360640190fd5b6001600160a01b0387166000908152600b602052604081207f000000000000000000000000000000000000000000000000000000000000000090899089908990610e7590611181565b8960405160200180878152602001866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012090506000610ede82611acd565b90506000610eee82878787611b19565b9050896001600160a01b0316816001600160a01b031614610f56576040805162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015290519081900360640190fd5b6001600160a01b038a166000908152600b60205260409020610f7790611c8e565b610f828a8a8a6112a6565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60105481565b600c5481565b610fcd6112a2565b6001600160a01b0316610fde610bfd565b6001600160a01b031614611027576040805162461bcd60e51b81526020600482018190526024820152600080516020612014833981519152604482015290519081900360640190fd5b6001600160a01b03811661106c5760405162461bcd60e51b8152600401808060200182810382526026815260200180611f196026913960400191505060405180910390fd5b600a546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b600082820183811015611122576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b611134838383610b47565b6001600160a01b0383166111585761114b82611c97565b611153611cc1565b610b47565b6001600160a01b03821661116f5761114b83611c97565b61117883611c97565b610b4782611c97565b5490565b6000828211156111dc576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000826111f1575060006107ca565b828202828482816111fe57fe5b04146111225760405162461bcd60e51b8152600401808060200182810382526021815260200180611fcb6021913960400191505060405180910390fd5b6000808211611291576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161129a57fe5b049392505050565b3390565b6001600160a01b0383166112eb5760405162461bcd60e51b815260040180806020018281038252602481526020018061209e6024913960400191505060405180910390fd5b6001600160a01b0382166113305760405162461bcd60e51b8152600401808060200182810382526022815260200180611f3f6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166113d75760405162461bcd60e51b81526004018080602001828103825260258152602001806120796025913960400191505060405180910390fd5b6001600160a01b03821661141c5760405162461bcd60e51b8152600401808060200182810382526023815260200180611ed46023913960400191505060405180910390fd5b611427838383611cce565b61146481604051806060016040528060268152602001611f61602691396001600160a01b03861660009081526020819052604090205491906114ed565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461149390826110c8565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561157c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611541578181015183820152602001611529565b50505050905090810190601f16801561156e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60007f00000000000000000000000000000000000000000000000000000000000000006115af611d26565b14156115dc57507f000000000000000000000000000000000000000000000000000000000000000061079d565b6116477f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611d2a565b905061079d565b611656610a1b565b61169e576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b600a805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6116d46112a2565b604080516001600160a01b039092168252519081900360200190a1565b6001600160a01b03821661174c576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61175860008383611cce565b60025461176590826110c8565b6002556001600160a01b03821660009081526020819052604090205461178b90826110c8565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b0382166118265760405162461bcd60e51b81526004018080602001828103825260218152602001806120586021913960400191505060405180910390fd5b61183282600083611cce565b61186f81604051806060016040528060228152602001611ef7602291396001600160a01b03851660009081526020819052604090205491906114ed565b6001600160a01b0383166000908152602081905260409020556002546118959082611185565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000806000841161192e576040805162461bcd60e51b815260206004820152601660248201527504552433230536e617073686f743a20696420697320360541b604482015290519081900360640190fd5b6119386009611181565b84111561198c576040805162461bcd60e51b815260206004820152601d60248201527f4552433230536e617073686f743a206e6f6e6578697374656e74206964000000604482015290519081900360640190fd5b60006119988486611d8c565b84549091508114156119b15760008092509250506119d3565b60018460010182815481106119c257fe5b906000526020600020015492509250505b9250929050565b60008183106119e95781611122565b5090919050565b6119f8610a1b565b15611a3d576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b600a805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586116d46112a2565b6000611a856009611c8e565b6000611a916009611181565b6040805182815290519192507f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb67919081900360200190a1905090565b6000611ad7611584565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115611b7a5760405162461bcd60e51b8152600401808060200182810382526022815260200180611f876022913960400191505060405180910390fd5b8360ff16601b1480611b8f57508360ff16601c145b611bca5760405162461bcd60e51b8152600401808060200182810382526022815260200180611fa96022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611c26573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610a12576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b80546001019055565b6001600160a01b03811660009081526006602052604090206109cf90611cbc83610a2b565b611e2d565b61094c6007611cbc6107d0565b611cd6610a1b565b15611d1b576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b610b47838383611129565b4690565b6000838383611d37611d26565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b03168152602001955050505050506040516020818303038152906040528051906020012090509392505050565b8154600090611d9d575060006107ca565b82546000905b80821015611dec576000611db78383611e79565b905084868281548110611dc657fe5b90600052602060002001541115611ddf57809150611de6565b8060010192505b50611da3565b600082118015611e14575083856001840381548110611e0757fe5b9060005260206000200154145b15611e2557506000190190506107ca565b5090506107ca565b6000611e396009611181565b905080611e4584611e9e565b1015610b47578254600180820185556000858152602080822090930193909355938401805494850181558252902090910155565b60006002808306600285060181611e8c57fe5b04600283046002850401019392505050565b8054600090611eaf57506000610704565b815482906000198101908110611ec157fe5b9060005260206000200154905061070456fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220818ee3d4ed05c2a0eed5ce396c5261b089518e3f142e45ae638db6fc30fb9d1e64736f6c63430007060033",
    "sourceMap": "573:2008:0:-:0;;;1006:95:4;961:140;;1487:1:0;1457:31;;;;1495:29;;1564:6;1531:39;;714:135;;;;;;;;;;1333:66:4;;;;;;;;;;;;;-1:-1:-1;;;1333:66:4;;;1381:4;2324:551:3;;;;;;;;;;;;;-1:-1:-1;;;2324:551:3;;;1958:145:8;;;;;;;;;;;;;-1:-1:-1;;;1958:145:8;;;;;;;;;;;;;;;;-1:-1:-1;;;1958:145:8;;;2040:5;2032;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2055:17:8;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2082:9:8;:14;;-1:-1:-1;;2082:14:8;2094:2;2082:14;;;-1:-1:-1;2082:9:8;904:12:1;:10;:12::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:1;-1:-1:-1;;;;;926:18:1;;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:1;-1:-1:-1;;959:43:1;;-1:-1:-1;;959:43:1;-1:-1:-1;935:7:15;:15;;-1:-1:-1;;;;935:15:15;;;2419:22:3;;;;;;;;;;2475:25;;;;;;;;;2634;;;;2669:31;;;;2529:95;2729:13;:11;:13::i;:::-;2710:32;;2779:58;2801:8;2811:10;2823:13;2779:21;:58::i;:::-;2752:85;;2847:21;;-1:-1:-1;796:45:0::2;::::0;-1:-1:-1;802:10:0::2;::::0;-1:-1:-1;830:10:0::2;::::0;-1:-1:-1;;830:8:0::2;:10::i;:::-;824:16;;:2;:16;814:7;:26;796:5;;;:45;;:::i;:::-;573:2008:::0;;598:104:13;685:10;598:104;:::o;4391:320:3:-;4686:9;;4661:44::o;3250:327::-;3352:7;3429:8;3455:4;3477:7;3502:13;:11;:13::i;:::-;3541:4;3401:159;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3401:159:3;;;;;;;;;;;;;;;;;;;;;;;;3378:192;;;;;;3371:199;;3250:327;;;;;:::o;3086:89:8:-;3159:9;;;;3086:89;:::o;7832:370::-;-1:-1:-1;;;;;7915:21:8;;7907:65;;;;;-1:-1:-1;;;7907:65:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;7983:49;8012:1;8016:7;8025:6;7983:20;:49::i;:::-;8058:24;8075:6;8058:12;;:16;;;;;;:24;;;;:::i;:::-;8043:12;:39;-1:-1:-1;;;;;8113:18:8;;:9;:18;;;;;;;;;;;;:30;;8136:6;;8113:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8092:18:8;;:9;:18;;;;;;;;;;;:51;;;;8158:37;;;;;;;8092:18;;:9;;8158:37;;;;;;;;;;7832:370;;:::o;1177:221:0:-;1366:8:15;:6;:8::i;:::-;1365:9;1357:38;;;;;-1:-1:-1;;;1357:38:15;;;;;;;;;;;;-1:-1:-1;;;1357:38:15;;;;;;;;;;;;;;;1346:44:0::1;1373:4;1379:2;1383:6;1346:26;;;;;:44;;:::i;:::-;1177:221:::0;;;:::o;2690:175:7:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:7:o;1052:84:15:-;1122:7;;-1:-1:-1;;;1122:7:15;;;;;1052:84::o;5089:526:10:-;5195:44;5222:4;5228:2;5232:6;5195:26;;;;;:44;;:::i;:::-;-1:-1:-1;;;;;5252:18:10;;5248:361;;5298:26;5321:2;5298:22;:26::i;:::-;5334:28;:26;:28::i;:::-;5248:361;;;-1:-1:-1;;;;;5381:16:10;;5377:232;;5425:28;5448:4;5425:22;:28::i;5377:232::-;5536:28;5559:4;5536:22;:28::i;:::-;5574:26;5597:2;7291:144;-1:-1:-1;;;;;7374:33:10;;;;;;:24;:33;;;;;7358:70;;7409:18;7399:7;7409:9;:18::i;:::-;7358:15;:70::i;:::-;7291:144;:::o;7441:116::-;7497:53;7513:21;7536:13;:11;:13::i;7497:53::-;7441:116::o;3399:125:8:-;-1:-1:-1;;;;;3499:18:8;;3473:7;3499:18;;;;;;;;;;;3399:125;;;;:::o;7563:309:10:-;7657:17;7677:28;:18;:26;;;;;:28;;:::i;:::-;7657:48;-1:-1:-1;7657:48:10;7719:30;7735:9;7719:15;:30::i;:::-;:42;7715:151;;;7777:29;;;;;;;;-1:-1:-1;7777:29:10;;;;;;;;;;;;;;7820:16;;;:35;;;;;;;;;;;;;;;7563:309::o;3235:106:8:-;3322:12;;3235:106;:::o;1106:112:14:-;1197:14;;1106:112::o;7878:206:10:-;7971:10;;7948:7;;7967:111;;-1:-1:-1;8009:1:10;8002:8;;7967:111;8052:10;;8048:3;;-1:-1:-1;;8052:14:10;;;8048:19;;;;;;;;;;;;;;8041:26;;;;573:2008:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;573:2008:0;;;-1:-1:-1;573:2008:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "573:2008:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2251:198;;;;;;;;;;;;;;;;-1:-1:-1;2251:198:0;-1:-1:-1;;;;;2251:198:0;;:::i;:::-;;;;;;;;;;;;;;;;2168:89:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1721:42:0;;;;;;;;;;;;;;;;-1:-1:-1;1721:42:0;-1:-1:-1;;;;;1721:42:0;;:::i;4244:166:8:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4244:166:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3235:106;;;:::i;2457:121:0:-;;;:::i;4877:317:8:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4877:317:8;;;;;;;;;;;;;;;;;:::i;3086:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2557:113:4;;;:::i;1531:39:0:-;;;:::i;5589:215:8:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5589:215:8;;;;;;;;:::i;1001:65:0:-;;;:::i;:::-;;1074:95;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1074:95:0;;;;;;;;:::i;524:89:9:-;;;;;;;;;;;;;;;;-1:-1:-1;524:89:9;;:::i;4285:262:10:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4285:262:10;;;;;;;;:::i;1052:84:15:-;;;:::i;3399:125:8:-;;;;;;;;;;;;;;;;-1:-1:-1;3399:125:8;-1:-1:-1;;;;;3399:125:8;;:::i;1717:145:1:-;;;:::i;919:290:9:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;919:290:9;;;;;;;;:::i;1495:29:0:-;;;:::i;2315:118:4:-;;;;;;;;;;;;;;;;-1:-1:-1;2315:118:4;-1:-1:-1;;;;;2315:118:4;;:::i;1772:131:0:-;;;:::i;932:61::-;;;:::i;1657:57::-;;;;;;;;;;;;;;;;-1:-1:-1;1657:57:0;-1:-1:-1;;;;;1657:57:0;;:::i;1085:85:1:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1085:85:1;;;;;;;;;;;;;;2370:93:8;;;:::i;857:67:0:-;;;:::i;4646:229:10:-;;;;;;;;;;;;;;;;-1:-1:-1;4646:229:10;;:::i;6291:266:8:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6291:266:8;;;;;;;;:::i;3727:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3727:172:8;;;;;;;;:::i;1577:29:0:-;;;:::i;1911:332::-;;;:::i;1460:794:4:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1460:794:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3957:149:8:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3957:149:8;;;;;;;;;;:::i;1613:35:0:-;;;:::i;1457:31::-;;;:::i;2011:240:1:-;;;;;;;;;;;;;;;;-1:-1:-1;2011:240:1;-1:-1:-1;;;;;2011:240:1;;:::i;2251:198:0:-;-1:-1:-1;;;;;2424:16:0;;2305:7;2424:16;;;:7;:16;;;;;;;;;2376:22;:31;;;;;;2332:109;;2424:16;2332:87;;2414:4;;2332:77;;2355:53;;:16;:14;:16::i;:::-;:20;;:53::i;:::-;2332:18;2342:7;2332:9;:18::i;:::-;:22;;:77::i;:::-;:81;;:87::i;:::-;:91;;:109::i;:::-;2325:116;;2251:198;;;;:::o;2168:89:8:-;2245:5;2238:12;;;;;;;;-1:-1:-1;;2238:12:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:13;;2238:12;;2245:5;;2238:12;;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;;:::o;1721:42:0:-;;;;;;;;;;;;;:::o;4244:166:8:-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;-1:-1:-1;4399:4:8;4244:166;;;;;:::o;3235:106::-;3322:12;;3235:106;:::o;2457:121:0:-;2512:7;2539:31;2554:15;;2539:10;;:14;;:31;;;;:::i;:::-;2532:38;;2457:121;:::o;4877:317:8:-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5076:19:8;;;;;;:11;:19;;;;;;5096:12;:10;:12::i;:::-;-1:-1:-1;;;;;5076:33:8;;;;;;;;;;;;-1:-1:-1;5076:33:8;;;:89;:37;:89::i;:::-;5045:8;:121::i;:::-;-1:-1:-1;5183:4:8;4877:317;;;;;:::o;3086:89::-;3159:9;;;;3086:89;:::o;2557:113:4:-;2617:7;2643:20;:18;:20::i;1531:39:0:-;;;;:::o;5589:215:8:-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;-1:-1:-1;;;;;5725:25:8;;;;;;;;;;;;;;;;;-1:-1:-1;5725:25:8;;;:34;;;;;;;;;;;:38;:50::i;1001:65:0:-;1308:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;;-1:-1:-1;;;1289:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:1;;;;;;;;;;;;;;;1048:10:0::1;:8;:10::i;:::-;1001:65::o:0;1074:95::-;1308:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;;-1:-1:-1;;;1289:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:1;;;;;;;;;;;;;;;1144:17:0::1;1150:2;1154:6;1144:5;:17::i;:::-;1074:95:::0;;:::o;524:89:9:-;579:27;585:12;:10;:12::i;:::-;599:6;579:5;:27::i;:::-;524:89;:::o;4285:262:10:-;-1:-1:-1;;;;;4448:33:10;;4372:7;4448:33;;;:24;:33;;;;;4372:7;;;;4427:55;;4436:10;;4427:8;:55::i;:::-;4391:91;;;;4500:11;:40;;4522:18;4532:7;4522:9;:18::i;:::-;4500:40;;;4514:5;4500:40;4493:47;4285:262;-1:-1:-1;;;;;4285:262:10:o;1052:84:15:-;1122:7;;-1:-1:-1;;;1122:7:15;;;;;1052:84::o;3399:125:8:-;-1:-1:-1;;;;;3499:18:8;3473:7;3499:18;;;;;;;;;;;;3399:125::o;1717:145:1:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;;-1:-1:-1;;;1289:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:1;;;;;;;;;;;;;;;1807:6:::1;::::0;1786:40:::1;::::0;1823:1:::1;::::0;-1:-1:-1;;;;;1807:6:1::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1836:6;:19:::0;;-1:-1:-1;;;;;;1836:19:1::1;::::0;;1717:145::o;919:290:9:-;995:26;1024:84;1061:6;1024:84;;;;;;;;;;;;;;;;;:32;1034:7;1043:12;:10;:12::i;:::-;1024:9;:32::i;:::-;:36;:84;:36;:84::i;:::-;995:113;;1119:51;1128:7;1137:12;:10;:12::i;:::-;1151:18;1119:8;:51::i;:::-;1180:22;1186:7;1195:6;1180:5;:22::i;:::-;919:290;;;:::o;1495:29:0:-;;;;:::o;2315:118:4:-;-1:-1:-1;;;;;2402:14:4;;2376:7;2402:14;;;:7;:14;;;;;:24;;:22;:24::i;1772:131:0:-;1829:7;1856:39;1865:15;1882:12;;1856:8;:39::i;932:61::-;1308:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;;-1:-1:-1;;;1289:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:1;;;;;;;;;;;;;;;977:8:0::1;:6;:8::i;1657:57::-:0;;;;;;;;;;;;;:::o;1085:85:1:-;1157:6;;-1:-1:-1;;;;;1157:6:1;1085:85;:::o;2370:93:8:-;2449:7;2442:14;;;;;;;;-1:-1:-1;;2442:14:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2417:13;;2442:14;;2449:7;;2442:14;;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;857:67:0;1308:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;;-1:-1:-1;;;1289:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:1;;;;;;;;;;;;;;;905:11:0::1;:9;:11::i;4646:229:10:-:0;4717:7;4737:16;4755:13;4772:43;4781:10;4793:21;4772:8;:43::i;:::-;4736:79;;;;4833:11;:35;;4855:13;:11;:13::i;:::-;4833:35;;;4847:5;4833:35;4826:42;4646:229;-1:-1:-1;;;;4646:229:10:o;6291:266:8:-;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;-1:-1:-1;;;;;6432:25:8;;;;;;;;;;;;;;;;;-1:-1:-1;6432:25:8;;;:34;;;;;;;;;;;:96;:38;:96::i;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;1577:29:0:-;;;;:::o;1911:332::-;1958:7;1982:13;:11;:13::i;:::-;1978:78;;-1:-1:-1;2024:20:0;;2017:27;;1978:78;2086:149;2129:91;2206:13;:11;:13::i;:::-;2129:72;2196:4;2129:62;2180:10;;2129:46;2160:14;;2129:26;:24;:26::i;:91::-;2086:20;;;:24;:149::i;1460:794:4:-;1687:8;1668:15;:27;;1660:69;;;;;-1:-1:-1;;;1660:69:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1917:14:4;;1740:18;1917:14;;;:7;:14;;;;;1812:16;;1846:5;;1869:7;;1894:5;;1917:24;;:22;:24::i;:::-;1959:8;1784:197;;;;;;;;;;;-1:-1:-1;;;;;1784:197:4;;;;;;-1:-1:-1;;;;;1784:197:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1761:230;;;;;;1740:251;;2002:12;2017:28;2034:10;2017:16;:28::i;:::-;2002:43;;2056:14;2073:28;2087:4;2093:1;2096;2099;2073:13;:28::i;:::-;2056:45;;2129:5;-1:-1:-1;;;;;2119:15:4;:6;-1:-1:-1;;;;;2119:15:4;;2111:58;;;;;-1:-1:-1;;;2111:58:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2180:14:4;;;;;;:7;:14;;;;;:26;;:24;:26::i;:::-;2216:31;2225:5;2232:7;2241:5;2216:8;:31::i;:::-;1460:794;;;;;;;;;;:::o;3957:149:8:-;-1:-1:-1;;;;;4072:18:8;;;4046:7;4072:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3957:149::o;1613:35:0:-;;;;:::o;1457:31::-;;;;:::o;2011:240:1:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:1;;1289:68;;;;;-1:-1:-1;;;1289:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:1;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:1;;::::1;::::0;2200:6:::1;::::0;2179:38:::1;::::0;2200:6:::1;::::0;2179:38:::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:1::1;-1:-1:-1::0;;;;;2227:17:1;;;::::1;::::0;;;::::1;::::0;;2011:240::o;2690:175:7:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:7:o;5089:526:10:-;5195:44;5222:4;5228:2;5232:6;5195:26;:44::i;:::-;-1:-1:-1;;;;;5252:18:10;;5248:361;;5298:26;5321:2;5298:22;:26::i;:::-;5334:28;:26;:28::i;:::-;5248:361;;;-1:-1:-1;;;;;5381:16:10;;5377:232;;5425:28;5448:4;5425:22;:28::i;5377:232::-;5536:28;5559:4;5536:22;:28::i;:::-;5574:26;5597:2;5574:22;:26::i;1106:112:14:-;1197:14;;1106:112::o;3136:155:7:-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:7;;;3136:155::o;3538:215::-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:7;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4217:150;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:7:o;598:104:13:-;685:10;598:104;:::o;9355:340:8:-;-1:-1:-1;;;;;9456:19:8;;9448:68;;;;-1:-1:-1;;;9448:68:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9534:21:8;;9526:68;;;;-1:-1:-1;;;9526:68:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9605:18:8;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9656:32;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;-1:-1:-1;;;;;7136:20:8;;7128:70;;;;-1:-1:-1;;;7128:70:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7216:23:8;;7208:71;;;;-1:-1:-1;;;7208:71:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7368:17:8;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7348:17:8;;;:9;:17;;;;;;;;;;;:91;;;;7472:20;;;;;;;:32;;7497:6;7472:24;:32::i;:::-;-1:-1:-1;;;;;7449:20:8;;;:9;:20;;;;;;;;;;;;:55;;;;7519:35;;;;;;;7449:20;;7519:35;;;;;;;;;;;;;7031:530;;;:::o;5432:163:7:-;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:5:7;;;5432:163::o;2961:283:3:-;3022:7;3062:16;3045:13;:11;:13::i;:::-;:33;3041:197;;;-1:-1:-1;3101:24:3;3094:31;;3041:197;3163:64;3185:10;3197:12;3211:15;3163:21;:64::i;:::-;3156:71;;;;2064:117:15;1631:8;:6;:8::i;:::-;1623:41;;;;;-1:-1:-1;;;1623:41:15;;;;;;;;;;;;-1:-1:-1;;;1623:41:15;;;;;;;;;;;;;;;2122:7:::1;:15:::0;;-1:-1:-1;;;;2122:15:15::1;::::0;;2152:22:::1;2161:12;:10;:12::i;:::-;2152:22;::::0;;-1:-1:-1;;;;;2152:22:15;;::::1;::::0;;;;;;;::::1;::::0;;::::1;2064:117::o:0;7832:370:8:-;-1:-1:-1;;;;;7915:21:8;;7907:65;;;;;-1:-1:-1;;;7907:65:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;7983:49;8012:1;8016:7;8025:6;7983:20;:49::i;:::-;8058:12;;:24;;8075:6;8058:16;:24::i;:::-;8043:12;:39;-1:-1:-1;;;;;8113:18:8;;:9;:18;;;;;;;;;;;:30;;8136:6;8113:22;:30::i;:::-;-1:-1:-1;;;;;8092:18:8;;:9;:18;;;;;;;;;;;:51;;;;8158:37;;;;;;;8092:18;;:9;;8158:37;;;;;;;;;;7832:370;;:::o;8522:410::-;-1:-1:-1;;;;;8605:21:8;;8597:67;;;;-1:-1:-1;;;8597:67:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8675:49;8696:7;8713:1;8717:6;8675:20;:49::i;:::-;8756:68;8779:6;8756:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8756:18:8;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;8735:18:8;;:9;:18;;;;;;;;;;:89;8849:12;;:24;;8866:6;8849:16;:24::i;:::-;8834:12;:39;8888:37;;;;;;;;8914:1;;-1:-1:-1;;;;;8888:37:8;;;;;;;;;;;;8522:410;;:::o;5621:1664:10:-;5718:4;5724:7;5768:1;5755:10;:14;5747:49;;;;;-1:-1:-1;;;5747:49:10;;;;;;;;;;;;-1:-1:-1;;;5747:49:10;;;;;;;;;;;;;;;5881:28;:18;:26;:28::i;:::-;5867:10;:42;;5859:84;;;;;-1:-1:-1;;;5859:84:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;7066:13;7082:40;:9;7111:10;7082:28;:40::i;:::-;7146:20;;7066:56;;-1:-1:-1;7137:29:10;;7133:146;;;7190:5;7197:1;7182:17;;;;;;;7133:146;7238:4;7244:9;:16;;7261:5;7244:23;;;;;;;;;;;;;;;;7230:38;;;;;5621:1664;;;;;;:::o;399:104:6:-;457:7;487:1;483;:5;:13;;495:1;483:13;;;-1:-1:-1;491:1:6;;476:20;-1:-1:-1;399:104:6:o;1817:115:15:-;1366:8;:6;:8::i;:::-;1365:9;1357:38;;;;;-1:-1:-1;;;1357:38:15;;;;;;;;;;;;-1:-1:-1;;;1357:38:15;;;;;;;;;;;;;;;1876:7:::1;:14:::0;;-1:-1:-1;;;;1876:14:15::1;-1:-1:-1::0;;;1876:14:15::1;::::0;;1905:20:::1;1912:12;:10;:12::i;3956:222:10:-:0;4003:7;4022:30;:18;:28;:30::i;:::-;4063:17;4083:28;:18;:26;:28::i;:::-;4126:19;;;;;;;;4063:48;;-1:-1:-1;4126:19:10;;;;;;;;;;4162:9;-1:-1:-1;3956:222:10;:::o;4202:183:3:-;4279:7;4344:20;:18;:20::i;:::-;4366:10;4315:62;;;;;;-1:-1:-1;;;4315:62:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4305:73;;;;;;4298:80;;4202:183;;;:::o;1960:1414:2:-;2045:7;2960:66;2946:80;;;2938:127;;;;-1:-1:-1;;;2938:127:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3083:1;:7;;3088:2;3083:7;:18;;;;3094:1;:7;;3099:2;3094:7;3083:18;3075:65;;;;-1:-1:-1;;;3075:65:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3235:14;3252:24;3262:4;3268:1;3271;3274;3252:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3252:24:2;;-1:-1:-1;;3252:24:2;;;-1:-1:-1;;;;;;;3294:20:2;;3286:57;;;;;-1:-1:-1;;;3286:57:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1224:178:14;1376:19;;1394:1;1376:19;;;1224:178::o;7291:144:10:-;-1:-1:-1;;;;;7374:33:10;;;;;;:24;:33;;;;;7358:70;;7409:18;7399:7;7409:9;:18::i;:::-;7358:15;:70::i;7441:116::-;7497:53;7513:21;7536:13;:11;:13::i;1177:221:0:-;1366:8:15;:6;:8::i;:::-;1365:9;1357:38;;;;;-1:-1:-1;;;1357:38:15;;;;;;;;;;;;-1:-1:-1;;;1357:38:15;;;;;;;;;;;;;;;1346:44:0::1;1373:4;1379:2;1383:6;1346:26;:44::i;4391:320:3:-:0;4686:9;;4661:44::o;3250:327::-;3352:7;3429:8;3455:4;3477:7;3502:13;:11;:13::i;:::-;3541:4;3401:159;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3401:159:3;;;;;;;;;;;;;;;;;;;;;;;;3378:192;;;;;;3371:199;;3250:327;;;;;:::o;590:892:12:-;702:12;;679:7;;698:56;;-1:-1:-1;742:1:12;735:8;;698:56;804:12;;764:11;;827:414;840:4;834:3;:10;827:414;;;860:11;874:23;887:3;892:4;874:12;:23::i;:::-;860:37;;1127:7;1114:5;1120:3;1114:10;;;;;;;;;;;;;;;;:20;1110:121;;;1161:3;1154:10;;1110:121;;;1209:3;1215:1;1209:7;1203:13;;1110:121;827:414;;;;1364:1;1358:3;:7;:36;;;;;1387:7;1369:5;1381:1;1375:3;:7;1369:14;;;;;;;;;;;;;;;;:25;1358:36;1354:122;;;-1:-1:-1;;;1417:7:12;;-1:-1:-1;1410:14:12;;1354:122;-1:-1:-1;1462:3:12;-1:-1:-1;1455:10:12;;7563:309:10;7657:17;7677:28;:18;:26;:28::i;:::-;7657:48;-1:-1:-1;7657:48:10;7719:30;7735:9;7719:15;:30::i;:::-;:42;7715:151;;;7777:29;;;;;;;;-1:-1:-1;7777:29:10;;;;;;;;;;;;;;7820:16;;;:35;;;;;;;;;;;;;;;7563:309::o;616:190:6:-;678:7;797:1;;788;:5;784:1;780;:5;:13;779:19;;;;;;773:1;769;:5;763:1;759;:5;758:17;:41;;616:190;-1:-1:-1;;;616:190:6:o;7878:206:10:-;7971:10;;7948:7;;7967:111;;-1:-1:-1;8009:1:10;8002:8;;7967:111;8052:10;;8048:3;;-1:-1:-1;;8052:14:10;;;8048:19;;;;;;;;;;;;;;8041:26;;;",
    "sourcePath": "c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/contracts/CuratorToken.sol",
    "compiler": {
        "name": "solc",
        "version": "0.7.6+commit.7338295f"
    },
    "ast": {
        "absolutePath": "c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/contracts/CuratorToken.sol",
        "exportedSymbols": {
            "Arrays": [
                2247
            ],
            "Context": [
                2270
            ],
            "Counters": [
                2320
            ],
            "CuratorToken": [
                219
            ],
            "ECDSA": [
                445
            ],
            "EIP712": [
                594
            ],
            "ERC20": [
                1707
            ],
            "ERC20Burnable": [
                1766
            ],
            "ERC20Permit": [
                740
            ],
            "ERC20Snapshot": [
                2084
            ],
            "IERC20": [
                2162
            ],
            "IERC20Permit": [
                776
            ],
            "Math": [
                849
            ],
            "Ownable": [
                329
            ],
            "Pausable": [
                2412
            ],
            "SafeMath": [
                1204
            ]
        },
        "id": 220,
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.7",
                    ".6"
                ],
                "nodeType": "PragmaDirective",
                "src": "2:23:0"
            },
            {
                "absolutePath": "c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/token/ERC20/ERC20.sol",
                "file": "../openzeppelin-contracts-3.4.0/contracts/token/ERC20/ERC20.sol",
                "id": 2,
                "nodeType": "ImportDirective",
                "scope": 220,
                "sourceUnit": 1708,
                "src": "29:73:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/token/ERC20/ERC20Burnable.sol",
                "file": "../openzeppelin-contracts-3.4.0/contracts/token/ERC20/ERC20Burnable.sol",
                "id": 3,
                "nodeType": "ImportDirective",
                "scope": 220,
                "sourceUnit": 1767,
                "src": "104:81:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/token/ERC20/ERC20Snapshot.sol",
                "file": "../openzeppelin-contracts-3.4.0/contracts/token/ERC20/ERC20Snapshot.sol",
                "id": 4,
                "nodeType": "ImportDirective",
                "scope": 220,
                "sourceUnit": 2085,
                "src": "187:81:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/access/Ownable.sol",
                "file": "../openzeppelin-contracts-3.4.0/contracts/access/Ownable.sol",
                "id": 5,
                "nodeType": "ImportDirective",
                "scope": 220,
                "sourceUnit": 330,
                "src": "270:70:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/utils/Pausable.sol",
                "file": "../openzeppelin-contracts-3.4.0/contracts/utils/Pausable.sol",
                "id": 6,
                "nodeType": "ImportDirective",
                "scope": 220,
                "sourceUnit": 2413,
                "src": "342:70:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/drafts/ERC20Permit.sol",
                "file": "../openzeppelin-contracts-3.4.0/contracts/drafts/ERC20Permit.sol",
                "id": 7,
                "nodeType": "ImportDirective",
                "scope": 220,
                "sourceUnit": 741,
                "src": "414:74:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/Melton/OneDrive/Documents/Blockchain/CuratorTokens/openzeppelin-contracts-3.4.0/contracts/math/Math.sol",
                "file": "../openzeppelin-contracts-3.4.0/contracts/math/Math.sol",
                "id": 9,
                "nodeType": "ImportDirective",
                "scope": 220,
                "sourceUnit": 850,
                "src": "492:77:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 8,
                            "name": "Math",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "src": "500:4:0",
                            "typeDescriptions": {}
                        }
                    }
                ],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 10,
                            "name": "ERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1707,
                            "src": "598:5:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1707",
                                "typeString": "contract ERC20"
                            }
                        },
                        "id": 11,
                        "nodeType": "InheritanceSpecifier",
                        "src": "598:5:0"
                    },
                    {
                        "baseName": {
                            "id": 12,
                            "name": "ERC20Burnable",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1766,
                            "src": "605:13:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Burnable_$1766",
                                "typeString": "contract ERC20Burnable"
                            }
                        },
                        "id": 13,
                        "nodeType": "InheritanceSpecifier",
                        "src": "605:13:0"
                    },
                    {
                        "baseName": {
                            "id": 14,
                            "name": "ERC20Snapshot",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 2084,
                            "src": "620:13:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Snapshot_$2084",
                                "typeString": "contract ERC20Snapshot"
                            }
                        },
                        "id": 15,
                        "nodeType": "InheritanceSpecifier",
                        "src": "620:13:0"
                    },
                    {
                        "baseName": {
                            "id": 16,
                            "name": "Ownable",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 329,
                            "src": "635:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Ownable_$329",
                                "typeString": "contract Ownable"
                            }
                        },
                        "id": 17,
                        "nodeType": "InheritanceSpecifier",
                        "src": "635:7:0"
                    },
                    {
                        "baseName": {
                            "id": 18,
                            "name": "Pausable",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 2412,
                            "src": "644:8:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Pausable_$2412",
                                "typeString": "contract Pausable"
                            }
                        },
                        "id": 19,
                        "nodeType": "InheritanceSpecifier",
                        "src": "644:8:0"
                    },
                    {
                        "baseName": {
                            "id": 20,
                            "name": "ERC20Permit",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 740,
                            "src": "654:11:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Permit_$740",
                                "typeString": "contract ERC20Permit"
                            }
                        },
                        "id": 21,
                        "nodeType": "InheritanceSpecifier",
                        "src": "654:11:0"
                    }
                ],
                "contractDependencies": [
                    329,
                    594,
                    740,
                    776,
                    1707,
                    1766,
                    2084,
                    2162,
                    2270,
                    2412
                ],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 219,
                "linearizedBaseContracts": [
                    219,
                    740,
                    594,
                    776,
                    2412,
                    329,
                    2084,
                    1766,
                    1707,
                    2162,
                    2270
                ],
                "name": "CuratorToken",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "id": 24,
                        "libraryName": {
                            "id": 22,
                            "name": "SafeMath",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1204,
                            "src": "685:8:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SafeMath_$1204",
                                "typeString": "library SafeMath"
                            }
                        },
                        "nodeType": "UsingForDirective",
                        "src": "679:27:0",
                        "typeName": {
                            "id": 23,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "698:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        }
                    },
                    {
                        "body": {
                            "id": 45,
                            "nodeType": "Block",
                            "src": "785:64:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 35,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "802:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 36,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "802:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 42,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "hexValue": "31303030303030",
                                                    "id": 37,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "814:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1000000_by_1",
                                                        "typeString": "int_const 1000000"
                                                    },
                                                    "value": "1000000"
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 41,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "hexValue": "3130",
                                                        "id": 38,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "824:2:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_10_by_1",
                                                            "typeString": "int_const 10"
                                                        },
                                                        "value": "10"
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "**",
                                                    "rightExpression": {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 39,
                                                            "name": "decimals",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1283,
                                                            "src": "830:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                                                "typeString": "function () view returns (uint8)"
                                                            }
                                                        },
                                                        "id": 40,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "830:10:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                        }
                                                    },
                                                    "src": "824:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "814:26:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 34,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1583,
                                            "src": "796:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 43,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "796:45:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 44,
                                    "nodeType": "ExpressionStatement",
                                    "src": "796:45:0"
                                }
                            ]
                        },
                        "id": 46,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "43757261746f72546f6b656e",
                                        "id": 27,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "734:14:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_d9df71d51c7e6a635365665b257b55a7ae0ae87ffbb354da72be988255a0a077",
                                            "typeString": "literal_string \"CuratorToken\""
                                        },
                                        "value": "CuratorToken"
                                    },
                                    {
                                        "hexValue": "4d544b",
                                        "id": 28,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "750:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
                                            "typeString": "literal_string \"MTK\""
                                        },
                                        "value": "MTK"
                                    }
                                ],
                                "id": 29,
                                "modifierName": {
                                    "id": 26,
                                    "name": "ERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1707,
                                    "src": "728:5:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1707_$",
                                        "typeString": "type(contract ERC20)"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "728:28:0"
                            },
                            {
                                "arguments": [
                                    {
                                        "hexValue": "43757261746f72546f6b656e",
                                        "id": 31,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "769:14:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_d9df71d51c7e6a635365665b257b55a7ae0ae87ffbb354da72be988255a0a077",
                                            "typeString": "literal_string \"CuratorToken\""
                                        },
                                        "value": "CuratorToken"
                                    }
                                ],
                                "id": 32,
                                "modifierName": {
                                    "id": 30,
                                    "name": "ERC20Permit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 740,
                                    "src": "757:11:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC20Permit_$740_$",
                                        "typeString": "type(contract ERC20Permit)"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "757:27:0"
                            }
                        ],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 25,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "725:2:0"
                        },
                        "returnParameters": {
                            "id": 33,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "785:0:0"
                        },
                        "scope": 219,
                        "src": "714:135:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 54,
                            "nodeType": "Block",
                            "src": "894:30:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 51,
                                            "name": "_snapshot",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1829,
                                            "src": "905:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                                                "typeString": "function () returns (uint256)"
                                            }
                                        },
                                        "id": 52,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "905:11:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 53,
                                    "nodeType": "ExpressionStatement",
                                    "src": "905:11:0"
                                }
                            ]
                        },
                        "functionSelector": "9711715a",
                        "id": 55,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 49,
                                "modifierName": {
                                    "id": 48,
                                    "name": "onlyOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 278,
                                    "src": "884:9:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_modifier$__$",
                                        "typeString": "modifier ()"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "884:9:0"
                            }
                        ],
                        "name": "snapshot",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 47,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "874:2:0"
                        },
                        "returnParameters": {
                            "id": 50,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "894:0:0"
                        },
                        "scope": 219,
                        "src": "857:67:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 63,
                            "nodeType": "Block",
                            "src": "966:27:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 60,
                                            "name": "_pause",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2395,
                                            "src": "977:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 61,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "977:8:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 62,
                                    "nodeType": "ExpressionStatement",
                                    "src": "977:8:0"
                                }
                            ]
                        },
                        "functionSelector": "8456cb59",
                        "id": 64,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 58,
                                "modifierName": {
                                    "id": 57,
                                    "name": "onlyOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 278,
                                    "src": "956:9:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_modifier$__$",
                                        "typeString": "modifier ()"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "956:9:0"
                            }
                        ],
                        "name": "pause",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 56,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "946:2:0"
                        },
                        "returnParameters": {
                            "id": 59,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "966:0:0"
                        },
                        "scope": 219,
                        "src": "932:61:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 72,
                            "nodeType": "Block",
                            "src": "1037:29:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 69,
                                            "name": "_unpause",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2411,
                                            "src": "1048:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 70,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1048:10:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 71,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1048:10:0"
                                }
                            ]
                        },
                        "functionSelector": "3f4ba83a",
                        "id": 73,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 67,
                                "modifierName": {
                                    "id": 66,
                                    "name": "onlyOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 278,
                                    "src": "1027:9:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_modifier$__$",
                                        "typeString": "modifier ()"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1027:9:0"
                            }
                        ],
                        "name": "unpause",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 65,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1017:2:0"
                        },
                        "returnParameters": {
                            "id": 68,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1037:0:0"
                        },
                        "scope": 219,
                        "src": "1001:65:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 87,
                            "nodeType": "Block",
                            "src": "1133:36:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 83,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 75,
                                                "src": "1150:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 84,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 77,
                                                "src": "1154:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 82,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1583,
                                            "src": "1144:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 85,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1144:17:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 86,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1144:17:0"
                                }
                            ]
                        },
                        "functionSelector": "40c10f19",
                        "id": 88,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 80,
                                "modifierName": {
                                    "id": 79,
                                    "name": "onlyOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 278,
                                    "src": "1123:9:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_modifier$__$",
                                        "typeString": "modifier ()"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1123:9:0"
                            }
                        ],
                        "name": "mint",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 78,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 75,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 88,
                                    "src": "1088:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 74,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1088:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 77,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 88,
                                    "src": "1100:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 76,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1100:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1087:28:0"
                        },
                        "returnParameters": {
                            "id": 81,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1133:0:0"
                        },
                        "scope": 219,
                        "src": "1074:95:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            1706,
                            1940
                        ],
                        "body": {
                            "id": 110,
                            "nodeType": "Block",
                            "src": "1335:63:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 105,
                                                "name": "from",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 90,
                                                "src": "1373:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 106,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 92,
                                                "src": "1379:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 107,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 94,
                                                "src": "1383:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 102,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "1346:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_super$_CuratorToken_$219",
                                                    "typeString": "contract super CuratorToken"
                                                }
                                            },
                                            "id": 104,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "_beforeTokenTransfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1940,
                                            "src": "1346:26:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 108,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1346:44:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 109,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1346:44:0"
                                }
                            ]
                        },
                        "id": 111,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 97,
                                "modifierName": {
                                    "id": 96,
                                    "name": "whenNotPaused",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2368,
                                    "src": "1276:13:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_modifier$__$",
                                        "typeString": "modifier ()"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1276:13:0"
                            }
                        ],
                        "name": "_beforeTokenTransfer",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 100,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 98,
                                    "name": "ERC20",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 1707,
                                    "src": "1308:5:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$1707",
                                        "typeString": "contract ERC20"
                                    }
                                },
                                {
                                    "id": 99,
                                    "name": "ERC20Snapshot",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 2084,
                                    "src": "1315:13:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20Snapshot_$2084",
                                        "typeString": "contract ERC20Snapshot"
                                    }
                                }
                            ],
                            "src": "1299:30:0"
                        },
                        "parameters": {
                            "id": 95,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 90,
                                    "mutability": "mutable",
                                    "name": "from",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 111,
                                    "src": "1207:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 89,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1207:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 92,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 111,
                                    "src": "1221:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 91,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1221:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 94,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 111,
                                    "src": "1233:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 93,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1233:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1206:42:0"
                        },
                        "returnParameters": {
                            "id": 101,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1335:0:0"
                        },
                        "scope": 219,
                        "src": "1177:221:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "functionSelector": "ebe2b12b",
                        "id": 114,
                        "mutability": "mutable",
                        "name": "periodFinish",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "1457:31:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 112,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1457:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "value": {
                            "hexValue": "30",
                            "id": 113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1487:1:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                            },
                            "value": "0"
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "7b0a47ee",
                        "id": 117,
                        "mutability": "mutable",
                        "name": "rewardRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "1495:29:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 115,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1495:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "value": {
                            "hexValue": "30",
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1523:1:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                            },
                            "value": "0"
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "386a9525",
                        "id": 120,
                        "mutability": "mutable",
                        "name": "rewardsDuration",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "1531:39:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 118,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1531:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "value": {
                            "hexValue": "37",
                            "id": 119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1564:6:0",
                            "subdenomination": "days",
                            "typeDescriptions": {
                                "typeIdentifier": "t_rational_604800_by_1",
                                "typeString": "int_const 604800"
                            },
                            "value": "7"
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "c8f33c91",
                        "id": 122,
                        "mutability": "mutable",
                        "name": "lastUpdateTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "1577:29:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 121,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1577:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "df136d65",
                        "id": 124,
                        "mutability": "mutable",
                        "name": "rewardPerTokenStored",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "1613:35:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 123,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1613:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "8b876347",
                        "id": 128,
                        "mutability": "mutable",
                        "name": "userRewardPerTokenPaid",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "1657:57:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                        },
                        "typeName": {
                            "id": 127,
                            "keyType": {
                                "id": 125,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1665:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "1657:27:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                            },
                            "valueType": {
                                "id": 126,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1676:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                }
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "0700037d",
                        "id": 132,
                        "mutability": "mutable",
                        "name": "rewards",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "1721:42:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                        },
                        "typeName": {
                            "id": 131,
                            "keyType": {
                                "id": 129,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1729:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "1721:27:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                            },
                            "valueType": {
                                "id": 130,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1740:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                }
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 144,
                            "nodeType": "Block",
                            "src": "1838:65:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 139,
                                                    "name": "block",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967292,
                                                    "src": "1865:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_block",
                                                        "typeString": "block"
                                                    }
                                                },
                                                "id": 140,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "src": "1865:15:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "id": 141,
                                                "name": "periodFinish",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 114,
                                                "src": "1882:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 137,
                                                "name": "Math",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 849,
                                                "src": "1856:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_Math_$849_$",
                                                    "typeString": "type(library Math)"
                                                }
                                            },
                                            "id": 138,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "min",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 815,
                                            "src": "1856:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                        },
                                        "id": 142,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1856:39:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 136,
                                    "id": 143,
                                    "nodeType": "Return",
                                    "src": "1849:46:0"
                                }
                            ]
                        },
                        "functionSelector": "80faa57d",
                        "id": 145,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "lastTimeRewardApplicable",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 133,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1805:2:0"
                        },
                        "returnParameters": {
                            "id": 136,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 135,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 145,
                                    "src": "1829:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 134,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1829:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1828:9:0"
                        },
                        "scope": 219,
                        "src": "1772:131:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 177,
                            "nodeType": "Block",
                            "src": "1967:276:0",
                            "statements": [
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 153,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "id": 150,
                                                "name": "totalSupply",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1293,
                                                "src": "1982:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                    "typeString": "function () view returns (uint256)"
                                                }
                                            },
                                            "id": 151,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1982:13:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 152,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1999:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "1982:18:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 157,
                                    "nodeType": "IfStatement",
                                    "src": "1978:78:0",
                                    "trueBody": {
                                        "id": 156,
                                        "nodeType": "Block",
                                        "src": "2002:54:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 154,
                                                    "name": "rewardPerTokenStored",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 124,
                                                    "src": "2024:20:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "functionReturnParameters": 149,
                                                "id": 155,
                                                "nodeType": "Return",
                                                "src": "2017:27:0"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 172,
                                                            "name": "totalSupply",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1293,
                                                            "src": "2206:11:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                                "typeString": "function () view returns (uint256)"
                                                            }
                                                        },
                                                        "id": 173,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "2206:13:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "arguments": [
                                                            {
                                                                "hexValue": "31653138",
                                                                "id": 169,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "2196:4:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                                    "typeString": "int_const 1000000000000000000"
                                                                },
                                                                "value": "1e18"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                                    "typeString": "int_const 1000000000000000000"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "arguments": [
                                                                    {
                                                                        "id": 166,
                                                                        "name": "rewardRate",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 117,
                                                                        "src": "2180:10:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "id": 163,
                                                                                "name": "lastUpdateTime",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 122,
                                                                                "src": "2160:14:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "arguments": [],
                                                                                "expression": {
                                                                                    "argumentTypes": [],
                                                                                    "id": 160,
                                                                                    "name": "lastTimeRewardApplicable",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 145,
                                                                                    "src": "2129:24:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                                                        "typeString": "function () view returns (uint256)"
                                                                                    }
                                                                                },
                                                                                "id": 161,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "kind": "functionCall",
                                                                                "lValueRequested": false,
                                                                                "names": [],
                                                                                "nodeType": "FunctionCall",
                                                                                "src": "2129:26:0",
                                                                                "tryCall": false,
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            },
                                                                            "id": 162,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "sub",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 1053,
                                                                            "src": "2129:30:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                            }
                                                                        },
                                                                        "id": 164,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "2129:46:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "id": 165,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "mul",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 1087,
                                                                    "src": "2129:50:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                    }
                                                                },
                                                                "id": 167,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "2129:62:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "id": 168,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "mul",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1087,
                                                            "src": "2129:66:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                            }
                                                        },
                                                        "id": 170,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "2129:72:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "id": 171,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "div",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1109,
                                                    "src": "2129:76:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                },
                                                "id": 174,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2129:91:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 158,
                                                "name": "rewardPerTokenStored",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 124,
                                                "src": "2086:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 159,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "add",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1031,
                                            "src": "2086:24:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                        },
                                        "id": 175,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2086:149:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 149,
                                    "id": 176,
                                    "nodeType": "Return",
                                    "src": "2066:169:0"
                                }
                            ]
                        },
                        "functionSelector": "cd3daf9d",
                        "id": 178,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "rewardPerToken",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 146,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1934:2:0"
                        },
                        "returnParameters": {
                            "id": 149,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 148,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 178,
                                    "src": "1958:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 147,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1958:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1957:9:0"
                        },
                        "scope": 219,
                        "src": "1911:332:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 206,
                            "nodeType": "Block",
                            "src": "2314:135:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "baseExpression": {
                                                    "id": 201,
                                                    "name": "rewards",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 132,
                                                    "src": "2424:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                        "typeString": "mapping(address => uint256)"
                                                    }
                                                },
                                                "id": 203,
                                                "indexExpression": {
                                                    "id": 202,
                                                    "name": "account",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 180,
                                                    "src": "2432:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "2424:16:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "hexValue": "31653138",
                                                        "id": 198,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "2414:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                            "typeString": "int_const 1000000000000000000"
                                                        },
                                                        "value": "1e18"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                            "typeString": "int_const 1000000000000000000"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "arguments": [
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "baseExpression": {
                                                                            "id": 192,
                                                                            "name": "userRewardPerTokenPaid",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 128,
                                                                            "src": "2376:22:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                                "typeString": "mapping(address => uint256)"
                                                                            }
                                                                        },
                                                                        "id": 194,
                                                                        "indexExpression": {
                                                                            "id": 193,
                                                                            "name": "account",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 180,
                                                                            "src": "2399:7:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        },
                                                                        "isConstant": false,
                                                                        "isLValue": true,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "IndexAccess",
                                                                        "src": "2376:31:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "arguments": [],
                                                                        "expression": {
                                                                            "argumentTypes": [],
                                                                            "id": 189,
                                                                            "name": "rewardPerToken",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 178,
                                                                            "src": "2355:14:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                                                "typeString": "function () view returns (uint256)"
                                                                            }
                                                                        },
                                                                        "id": 190,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "2355:16:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "id": 191,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "sub",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 1053,
                                                                    "src": "2355:20:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                    }
                                                                },
                                                                "id": 195,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "2355:53:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "arguments": [
                                                                    {
                                                                        "id": 186,
                                                                        "name": "account",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 180,
                                                                        "src": "2342:7:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    ],
                                                                    "id": 185,
                                                                    "name": "balanceOf",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1307,
                                                                    "src": "2332:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                                        "typeString": "function (address) view returns (uint256)"
                                                                    }
                                                                },
                                                                "id": 187,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "2332:18:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "id": 188,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "mul",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1087,
                                                            "src": "2332:22:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                            }
                                                        },
                                                        "id": 196,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "2332:77:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "id": 197,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "div",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1109,
                                                    "src": "2332:81:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                },
                                                "id": 199,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2332:87:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 200,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "add",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1031,
                                            "src": "2332:91:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                        },
                                        "id": 204,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2332:109:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 184,
                                    "id": 205,
                                    "nodeType": "Return",
                                    "src": "2325:116:0"
                                }
                            ]
                        },
                        "functionSelector": "008cc262",
                        "id": 207,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "earned",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 181,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 180,
                                    "mutability": "mutable",
                                    "name": "account",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 207,
                                    "src": "2267:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 179,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2267:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2266:17:0"
                        },
                        "returnParameters": {
                            "id": 184,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 183,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 207,
                                    "src": "2305:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 182,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2305:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2304:9:0"
                        },
                        "scope": 219,
                        "src": "2251:198:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 217,
                            "nodeType": "Block",
                            "src": "2521:57:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 214,
                                                "name": "rewardsDuration",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 120,
                                                "src": "2554:15:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 212,
                                                "name": "rewardRate",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 117,
                                                "src": "2539:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 213,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1087,
                                            "src": "2539:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                        },
                                        "id": 215,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2539:31:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 211,
                                    "id": 216,
                                    "nodeType": "Return",
                                    "src": "2532:38:0"
                                }
                            ]
                        },
                        "functionSelector": "1c1f78eb",
                        "id": 218,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getRewardForDuration",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 208,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2486:2:0"
                        },
                        "returnParameters": {
                            "id": 211,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 210,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 218,
                                    "src": "2512:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 209,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2512:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2511:9:0"
                        },
                        "scope": 219,
                        "src": "2457:121:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 220,
                "src": "573:2008:0"
            }
        ],
        "src": "2:2579:0"
    },
    "functionHashes": {
        "DOMAIN_SEPARATOR()": "3644e515",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "balanceOfAt(address,uint256)": "4ee2cd7e",
        "burn(uint256)": "42966c68",
        "burnFrom(address,uint256)": "79cc6790",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "earned(address)": "008cc262",
        "getRewardForDuration()": "1c1f78eb",
        "increaseAllowance(address,uint256)": "39509351",
        "lastTimeRewardApplicable()": "80faa57d",
        "lastUpdateTime()": "c8f33c91",
        "mint(address,uint256)": "40c10f19",
        "name()": "06fdde03",
        "nonces(address)": "7ecebe00",
        "owner()": "8da5cb5b",
        "pause()": "8456cb59",
        "paused()": "5c975abb",
        "periodFinish()": "ebe2b12b",
        "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
        "renounceOwnership()": "715018a6",
        "rewardPerToken()": "cd3daf9d",
        "rewardPerTokenStored()": "df136d65",
        "rewardRate()": "7b0a47ee",
        "rewards(address)": "0700037d",
        "rewardsDuration()": "386a9525",
        "snapshot()": "9711715a",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "totalSupplyAt(uint256)": "981b24d0",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b",
        "unpause()": "3f4ba83a",
        "userRewardPerTokenPaid(address)": "8b876347"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1695200",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "DOMAIN_SEPARATOR()": "infinite",
            "allowance(address,address)": "1316",
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "1256",
            "balanceOfAt(address,uint256)": "infinite",
            "burn(uint256)": "infinite",
            "burnFrom(address,uint256)": "infinite",
            "decimals()": "1125",
            "decreaseAllowance(address,uint256)": "infinite",
            "earned(address)": "infinite",
            "getRewardForDuration()": "infinite",
            "increaseAllowance(address,uint256)": "infinite",
            "lastTimeRewardApplicable()": "1196",
            "lastUpdateTime()": "1109",
            "mint(address,uint256)": "infinite",
            "name()": "infinite",
            "nonces(address)": "1276",
            "owner()": "1126",
            "pause()": "infinite",
            "paused()": "1116",
            "periodFinish()": "1108",
            "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
            "renounceOwnership()": "infinite",
            "rewardPerToken()": "infinite",
            "rewardPerTokenStored()": "1086",
            "rewardRate()": "1066",
            "rewards(address)": "1215",
            "rewardsDuration()": "1044",
            "snapshot()": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "1044",
            "totalSupplyAt(uint256)": "infinite",
            "transfer(address,uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "infinite",
            "unpause()": "infinite",
            "userRewardPerTokenPaid(address)": "1191"
        },
        "internal": {
            "_beforeTokenTransfer(address,address,uint256)": "infinite"
        }
    }
}